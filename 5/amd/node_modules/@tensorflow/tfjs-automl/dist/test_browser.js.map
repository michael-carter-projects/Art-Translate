{"version":3,"file":"test_browser.js","sourceRoot":"","sources":["../src/test_browser.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AACH,OAAO,gCAAgC,CAAC;AAExC,iDAAiD;AACjD,OAAO,EAAC,0BAA0B,EAAE,eAAe,EAAE,WAAW,EAAE,SAAS,EAAC,MAAM,yCAAyC,CAAC;AAE5H,wEAAwE;AACxE,OAAO,CAAC,wBAAwB,GAAG,KAAK,CAAC;AAEzC,eAAe,CAAC;IACd,IAAI,EAAE,QAAQ;IACd,WAAW,EAAE,OAAO;IACpB,KAAK,EAAE;QACL,eAAe,EAAE,CAAC;QAClB,mBAAmB,EAAE,KAAK;QAC1B,2BAA2B,EAAE,CAAC;KAC/B;IACD,UAAU,EAAE,IAAI;CACjB,CAAC,CAAC;AAIH,MAAM,OAAO,GAAG,0BAA0B,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AAC7E,IAAI,OAAO,IAAI,IAAI,EAAE;IACnB,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;CACxB;KAAM;IACL,qDAAqD;IACrD,WAAW,CAAC;QACV,SAAS;QACT;YACE,IAAI,EAAE,YAAY;YAClB,WAAW,EAAE,OAAO;YACpB,KAAK,EAAE;gBACL,eAAe,EAAE,CAAC;gBAClB,mBAAmB,EAAE,KAAK;gBAC1B,2BAA2B,EAAE,CAAC;aAC/B;YACD,UAAU,EAAE,IAAI;SACjB;KACF,CAAC,CAAC;CACJ","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport '@tensorflow/tfjs-backend-webgl';\n\n// tslint:disable-next-line: no-imports-from-dist\nimport {parseTestEnvFromKarmaFlags, registerTestEnv, setTestEnvs, TEST_ENVS} from '@tensorflow/tfjs-core/dist/jasmine_util';\n\n// Increase test timeout since we are fetching the model files from GCS.\njasmine.DEFAULT_TIMEOUT_INTERVAL = 20000;\n\nregisterTestEnv({\n  name: 'webgl1',\n  backendName: 'webgl',\n  flags: {\n    'WEBGL_VERSION': 1,\n    'WEBGL_CPU_FORWARD': false,\n    'WEBGL_SIZE_UPLOAD_UNIFORM': 0\n  },\n  isDataSync: true\n});\n\n// tslint:disable-next-line:no-any\ndeclare let __karma__: any;\nconst testEnv = parseTestEnvFromKarmaFlags(__karma__.config.args, TEST_ENVS);\nif (testEnv != null) {\n  setTestEnvs([testEnv]);\n} else {\n  // Run browser tests againts both the webgl backends.\n  setTestEnvs([\n    // WebGL.\n    {\n      name: 'test-webgl',\n      backendName: 'webgl',\n      flags: {\n        'WEBGL_VERSION': 2,\n        'WEBGL_CPU_FORWARD': false,\n        'WEBGL_SIZE_UPLOAD_UNIFORM': 0\n      },\n      isDataSync: true\n    }\n  ]);\n}\n"]}