{"version":3,"file":"util.js","sourceRoot":"","sources":["../src/util.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,EAAC,OAAO,EAAE,MAAM,EAAY,IAAI,EAAC,MAAM,uBAAuB,CAAC;AAGtE,MAAM,UAAU,aAAa,CAAC,GAAe;IAC3C,OAAO,GAAG,YAAY,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AAC/D,CAAC;AAED,uCAAuC;AACvC,MAAM,CAAC,KAAK,UAAU,cAAc,CAAC,QAAgB;IACnD,MAAM,gBAAgB,GAAG,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACnD,MAAM,SAAS,GACX,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACzE,MAAM,OAAO,GAAG,GAAG,SAAS,UAAU,CAAC;IACvC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC3C,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;IACnC,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACjC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {browser, Tensor, Tensor3D, util} from '@tensorflow/tfjs-core';\nimport {ImageInput} from './types';\n\nexport function imageToTensor(img: ImageInput): Tensor3D {\n  return img instanceof Tensor ? img : browser.fromPixels(img);\n}\n\n/** Loads and parses the dictionary. */\nexport async function loadDictionary(modelUrl: string): Promise<string[]> {\n  const lastIndexOfSlash = modelUrl.lastIndexOf('/');\n  const prefixUrl =\n      lastIndexOfSlash >= 0 ? modelUrl.slice(0, lastIndexOfSlash + 1) : '';\n  const dictUrl = `${prefixUrl}dict.txt`;\n  const response = await util.fetch(dictUrl);\n  const text = await response.text();\n  return text.trim().split('\\n');\n}\n"]}